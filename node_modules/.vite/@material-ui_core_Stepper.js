import {
  _objectWithoutProperties,
  chainPropTypes,
  clsx_m_default,
  require_prop_types,
  withStyles_default
} from "./chunk-WNG6J4SO.js";
import {
  _extends
} from "./chunk-H2NMZL5F.js";
import {
  __toModule
} from "./chunk-XVNMABU7.js";
import {
  require_react
} from "./chunk-VD7M3R6Y.js";
import "./chunk-KHGO2BKN.js";

// node_modules/@material-ui/core/esm/Stepper/Stepper.js
var React3 = __toModule(require_react());
var import_prop_types3 = __toModule(require_prop_types());

// node_modules/@material-ui/core/esm/Paper/Paper.js
var React = __toModule(require_react());
var import_prop_types = __toModule(require_prop_types());
var styles = function styles2(theme) {
  var elevations = {};
  theme.shadows.forEach(function(shadow, index) {
    elevations["elevation".concat(index)] = {
      boxShadow: shadow
    };
  });
  return _extends({
    root: {
      backgroundColor: theme.palette.background.paper,
      color: theme.palette.text.primary,
      transition: theme.transitions.create("box-shadow")
    },
    rounded: {
      borderRadius: theme.shape.borderRadius
    },
    outlined: {
      border: "1px solid ".concat(theme.palette.divider)
    }
  }, elevations);
};
var Paper = React.forwardRef(function Paper2(props, ref) {
  var classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? "div" : _props$component, _props$square = props.square, square = _props$square === void 0 ? false : _props$square, _props$elevation = props.elevation, elevation = _props$elevation === void 0 ? 1 : _props$elevation, _props$variant = props.variant, variant = _props$variant === void 0 ? "elevation" : _props$variant, other = _objectWithoutProperties(props, ["classes", "className", "component", "square", "elevation", "variant"]);
  return React.createElement(Component, _extends({
    className: clsx_m_default(classes.root, className, variant === "outlined" ? classes.outlined : classes["elevation".concat(elevation)], !square && classes.rounded),
    ref
  }, other));
});
true ? Paper.propTypes = {
  children: import_prop_types.default.node,
  classes: import_prop_types.default.object,
  className: import_prop_types.default.string,
  component: import_prop_types.default.elementType,
  elevation: chainPropTypes(import_prop_types.default.number, function(props) {
    var classes = props.classes, elevation = props.elevation;
    if (classes === void 0) {
      return null;
    }
    if (elevation != null && classes["elevation".concat(elevation)] === void 0) {
      return new Error("Material-UI: This elevation `".concat(elevation, "` is not implemented."));
    }
    return null;
  }),
  square: import_prop_types.default.bool,
  variant: import_prop_types.default.oneOf(["elevation", "outlined"])
} : void 0;
var Paper_default = withStyles_default(styles, {
  name: "MuiPaper"
})(Paper);

// node_modules/@material-ui/core/esm/StepConnector/StepConnector.js
var React2 = __toModule(require_react());
var import_prop_types2 = __toModule(require_prop_types());
var styles3 = function styles4(theme) {
  return {
    root: {
      flex: "1 1 auto"
    },
    horizontal: {},
    vertical: {
      marginLeft: 12,
      padding: "0 0 8px"
    },
    alternativeLabel: {
      position: "absolute",
      top: 8 + 4,
      left: "calc(-50% + 20px)",
      right: "calc(50% + 20px)"
    },
    active: {},
    completed: {},
    disabled: {},
    line: {
      display: "block",
      borderColor: theme.palette.type === "light" ? theme.palette.grey[400] : theme.palette.grey[600]
    },
    lineHorizontal: {
      borderTopStyle: "solid",
      borderTopWidth: 1
    },
    lineVertical: {
      borderLeftStyle: "solid",
      borderLeftWidth: 1,
      minHeight: 24
    }
  };
};
var StepConnector = React2.forwardRef(function StepConnector2(props, ref) {
  var active = props.active, _props$alternativeLab = props.alternativeLabel, alternativeLabel = _props$alternativeLab === void 0 ? false : _props$alternativeLab, classes = props.classes, className = props.className, completed = props.completed, disabled = props.disabled, index = props.index, _props$orientation = props.orientation, orientation = _props$orientation === void 0 ? "horizontal" : _props$orientation, other = _objectWithoutProperties(props, ["active", "alternativeLabel", "classes", "className", "completed", "disabled", "index", "orientation"]);
  return React2.createElement("div", _extends({
    className: clsx_m_default(classes.root, classes[orientation], className, alternativeLabel && classes.alternativeLabel, active && classes.active, completed && classes.completed, disabled && classes.disabled),
    ref
  }, other), React2.createElement("span", {
    className: clsx_m_default(classes.line, {
      horizontal: classes.lineHorizontal,
      vertical: classes.lineVertical
    }[orientation])
  }));
});
true ? StepConnector.propTypes = {
  classes: import_prop_types2.default.object,
  className: import_prop_types2.default.string
} : void 0;
var StepConnector_default = withStyles_default(styles3, {
  name: "MuiStepConnector"
})(StepConnector);

// node_modules/@material-ui/core/esm/Stepper/Stepper.js
var styles5 = {
  root: {
    display: "flex",
    padding: 24
  },
  horizontal: {
    flexDirection: "row",
    alignItems: "center"
  },
  vertical: {
    flexDirection: "column"
  },
  alternativeLabel: {
    alignItems: "flex-start"
  }
};
var defaultConnector = React3.createElement(StepConnector_default, null);
var Stepper = React3.forwardRef(function Stepper2(props, ref) {
  var _props$activeStep = props.activeStep, activeStep = _props$activeStep === void 0 ? 0 : _props$activeStep, _props$alternativeLab = props.alternativeLabel, alternativeLabel = _props$alternativeLab === void 0 ? false : _props$alternativeLab, children = props.children, classes = props.classes, className = props.className, _props$connector = props.connector, connectorProp = _props$connector === void 0 ? defaultConnector : _props$connector, _props$nonLinear = props.nonLinear, nonLinear = _props$nonLinear === void 0 ? false : _props$nonLinear, _props$orientation = props.orientation, orientation = _props$orientation === void 0 ? "horizontal" : _props$orientation, other = _objectWithoutProperties(props, ["activeStep", "alternativeLabel", "children", "classes", "className", "connector", "nonLinear", "orientation"]);
  var connector = React3.isValidElement(connectorProp) ? React3.cloneElement(connectorProp, {
    orientation
  }) : null;
  var childrenArray = React3.Children.toArray(children);
  var steps = childrenArray.map(function(step, index) {
    var state = {
      index,
      active: false,
      completed: false,
      disabled: false
    };
    if (activeStep === index) {
      state.active = true;
    } else if (!nonLinear && activeStep > index) {
      state.completed = true;
    } else if (!nonLinear && activeStep < index) {
      state.disabled = true;
    }
    return React3.cloneElement(step, _extends({
      alternativeLabel,
      connector,
      last: index + 1 === childrenArray.length,
      orientation
    }, state, step.props));
  });
  return React3.createElement(Paper_default, _extends({
    square: true,
    elevation: 0,
    className: clsx_m_default(classes.root, classes[orientation], className, alternativeLabel && classes.alternativeLabel),
    ref
  }, other), steps);
});
true ? Stepper.propTypes = {
  activeStep: import_prop_types3.default.number,
  alternativeLabel: import_prop_types3.default.bool,
  children: import_prop_types3.default.node,
  classes: import_prop_types3.default.object,
  className: import_prop_types3.default.string,
  connector: import_prop_types3.default.element,
  nonLinear: import_prop_types3.default.bool,
  orientation: import_prop_types3.default.oneOf(["horizontal", "vertical"])
} : void 0;
var Stepper_default = withStyles_default(styles5, {
  name: "MuiStepper"
})(Stepper);

// dep:@material-ui_core_Stepper
var material_ui_core_Stepper_default = Stepper_default;
export {
  material_ui_core_Stepper_default as default
};
//# sourceMappingURL=@material-ui_core_Stepper.js.map
