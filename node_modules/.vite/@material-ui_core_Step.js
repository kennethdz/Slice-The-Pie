import {
  _objectWithoutProperties,
  clsx_m_default,
  require_prop_types,
  require_react_is,
  withStyles_default
} from "./chunk-WNG6J4SO.js";
import {
  _extends
} from "./chunk-H2NMZL5F.js";
import {
  __toModule
} from "./chunk-XVNMABU7.js";
import {
  require_react
} from "./chunk-VD7M3R6Y.js";
import "./chunk-KHGO2BKN.js";

// node_modules/@material-ui/core/esm/Step/Step.js
var React = __toModule(require_react());
var import_react_is = __toModule(require_react_is());
var import_prop_types = __toModule(require_prop_types());
var styles = {
  root: {},
  horizontal: {
    paddingLeft: 8,
    paddingRight: 8
  },
  vertical: {},
  alternativeLabel: {
    flex: 1,
    position: "relative"
  },
  completed: {}
};
var Step = React.forwardRef(function Step2(props, ref) {
  var _props$active = props.active, active = _props$active === void 0 ? false : _props$active, alternativeLabel = props.alternativeLabel, children = props.children, classes = props.classes, className = props.className, _props$completed = props.completed, completed = _props$completed === void 0 ? false : _props$completed, connectorProp = props.connector, _props$disabled = props.disabled, disabled = _props$disabled === void 0 ? false : _props$disabled, _props$expanded = props.expanded, expanded = _props$expanded === void 0 ? false : _props$expanded, index = props.index, last = props.last, orientation = props.orientation, other = _objectWithoutProperties(props, ["active", "alternativeLabel", "children", "classes", "className", "completed", "connector", "disabled", "expanded", "index", "last", "orientation"]);
  var connector = connectorProp ? React.cloneElement(connectorProp, {
    orientation,
    alternativeLabel,
    index,
    active,
    completed,
    disabled
  }) : null;
  var newChildren = React.createElement("div", _extends({
    className: clsx_m_default(classes.root, classes[orientation], className, alternativeLabel && classes.alternativeLabel, completed && classes.completed),
    ref
  }, other), connector && alternativeLabel && index !== 0 ? connector : null, React.Children.map(children, function(child) {
    if (!React.isValidElement(child)) {
      return null;
    }
    if (true) {
      if ((0, import_react_is.isFragment)(child)) {
        console.error(["Material-UI: The Step component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join("\n"));
      }
    }
    return React.cloneElement(child, _extends({
      active,
      alternativeLabel,
      completed,
      disabled,
      expanded,
      last,
      icon: index + 1,
      orientation
    }, child.props));
  }));
  if (connector && !alternativeLabel && index !== 0) {
    return React.createElement(React.Fragment, null, connector, newChildren);
  }
  return newChildren;
});
true ? Step.propTypes = {
  active: import_prop_types.default.bool,
  children: import_prop_types.default.node,
  classes: import_prop_types.default.object,
  className: import_prop_types.default.string,
  completed: import_prop_types.default.bool,
  disabled: import_prop_types.default.bool,
  expanded: import_prop_types.default.bool
} : void 0;
var Step_default = withStyles_default(styles, {
  name: "MuiStep"
})(Step);

// dep:@material-ui_core_Step
var material_ui_core_Step_default = Step_default;
export {
  material_ui_core_Step_default as default
};
//# sourceMappingURL=@material-ui_core_Step.js.map
